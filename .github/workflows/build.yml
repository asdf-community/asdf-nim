# yamllint disable rule:line-length

name: Build
on:
  pull_request:
    paths-ignore:
      - *.md

jobs:
  # Run tests with bats
  bats_tests:
    name: Bats tests
    runs-on: ubuntu-latest

    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout plugin
        uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: '15'

      - name: Run tests
        run: |
          npm install --include=dev
          [ -n "$(which bats)" ] || npm link bats
          npm run test

  plugin_test_x86:
    name: ðŸ‘‘${{ matrix.nim-version }}/${{ matrix.libc }}/x86_64
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        include:
          # Test installation of official Linux binaries from nim-lang.org
          - os: ubuntu-latest
            nim-version: latest
            libc: linux-glibc
          - os: ubuntu-latest
            nim-version: 1.6.0
            libc: linux-glibc
          - os: ubuntu-latest
            nim-version: 1.4.8
            libc: linux-glibc
          - os: ubuntu-latest
            nim-version: 1.2.12
            libc: linux-glibc
          - os: ubuntu-latest
            nim-version: 1.0.10
            libc: linux-glibc
          - os: macos-latest
            nim-version: 1.4.8
            libc: macOS

    steps:
      # Optimization: re-use cached Nim->C compilation
      - name: Restore cache
        if: matrix.nim-version != 'ref:HEAD' && matrix.nim-version != 'latest'
        uses: actions/cache@v2
        with:
          path: ~/.cache
          key: cache-${{ matrix.os }}-${{ matrix.nim-version }}

      - name: Install asdf
        uses: asdf-vm/actions/setup@v1

      - name: Checkout plugin
        uses: actions/checkout@v2

      - name: Install asdf-nim & test
        shell: bash
        run: |
          set -ueo pipefail
          asdf plugin test nim . --asdf-tool-version "${{ matrix.nim-version }}" --asdf-plugin-gitref "${GITHUB_SHA}" nim -v

  # Test musl installation
  plugin_test_x86_musl:
    name: ðŸ‘‘1.6.0/linux-musl/x86_64
    runs-on: ubuntu-latest
    container: alpine:latest

    steps:
      # Optimization: re-use cached Nim->C compilation
      - name: Restore cache
        uses: actions/cache@v2
        with:
          path: ~/.cache
          key: cache-ubuntu-latest-${{ matrix.nim-version }}

      - name: Install dependencies
        run: apk add --update --no-cache --upgrade bash git curl coreutils tar xz grep

      - name: Test plugin
        uses: asdf-vm/actions/plugin-test@v1
        with:
          command: nim -v
          version: 1.6.0

  # Test installation for a few non-x86 architectures
  plugin_test_non_x86:
    name: ðŸ‘‘${{ matrix.nim-version }}/linux-glibc/${{ matrix.arch }}
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          # Test on non-x86 Linux using run-on-arch-action
          - runs-on: ubuntu-latest
            nim-version: 1.6.0
            arch: armv7
          - runs-on: ubuntu-latest
            nim-version: 1.4.8
            arch: aarch64
          - runs-on: ubuntu-latest
            nim-version: 1.2.12
            arch: ppc64le

    steps:
      # Optimization: re-use cached Nim->C compilation
      - name: Restore cache
        uses: actions/cache@v2
        with:
          path: ~/.cache
          key: cache-${{ matrix.arch }}-${{ matrix.nim-version }}

      - name: Checkout plugin
        uses: actions/checkout@v2

      # Install & run tests on non-x86
      - uses: uraimo/run-on-arch-action@v2.0.8
        name: Install Nim & run tests
        with:
          arch: ${{ matrix.arch }}
          distro: buster

          dockerRunArgs: |
            --volume "${HOME}/.cache:/root/.cache"

          setup: mkdir -p "${HOME}/.cache"

          shell: /usr/bin/env bash

          install: |
            apt-get update -q -y
            apt-get -qq install -y curl git hub xz-utils
            git clone https://github.com/asdf-vm/asdf.git "${HOME}/.asdf"

          env: |
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

          run: |
            . "${HOME}/.asdf/asdf.sh"
            asdf plugin test nim . --asdf-tool-version "${{ matrix.nim-version }}" --asdf-plugin-gitref "${GITHUB_SHA}" nim -v
